<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="homework.springboothomework.dao.StudentDao">


<!--    Student findOneByName(Student student);-->
    <!--    超管查询所有学生-->
    <select id="findAll" resultType="student">
    select * from student order by sno ASC
</select>
    <!--    //根据学号查询学生信息-->
    <select id="findOneBySno" resultType="student" parameterType="int">
        select * from student <where>

            sno like concat('%', #{sno},'%') order by sno ASC

    </where>
    </select>
<!--    //更新学生信息-->
<!--    boolean updateOne(Student student);-->
    <update id="updateOne" parameterType="homework.springboothomework.pojo.Student">
        update student <set>
        <if test="password!=null and password!=''">
            password=#{password},
        </if>
        <if test="sname!=null and sname!=''">
            sname=#{sname},
        </if>
        <if test="sex!=null and sex!=''">
            sex=#{sex},
        </if>
        <if test="age!=null and age!=''">
            age=#{age},
        </if>
        <if test="major!=null and major!=''">
            major=#{major},
        </if>
        <if test="healthcode!=null and healthcode!=''">
            healthcode=#{healthcode},
        </if>
        <if test="local!=null and local!=''">
            local=#{local},
        </if>
        <if test="clockin!=null and clockin!=''">
            clockin=#{clockin},
        </if>
</set>
<where>
    sno=#{sno}
</where>
    </update>
<!--    //改密码-->
<!--    boolean updatePass(@Param("sno") Integer sno, @Param("pass") String pass);-->
    <update id="updatePass">
        update student set password=#{pass} where sno=#{sno}
    </update>
<!--   更新学生健康状态 -->
    <update id="updateOneByName">
        update student set healthcode=#{healthcode} where sno=#{sno}
    </update>
<!--    添加学生-->
    <insert id="addOne" parameterType="student">
        insert into student(sno,password,sname,sex,age,major,healthcode,clockin)
        values(#{sno},#{password},#{sname},#{sex},#{age},#{major},#{healthcode},#{clockin})
    </insert>
<!--    学生登录验证-->
    <select id="login" resultType="int">
        select count(*) from student where sno=#{sno} and password=#{pass}
    </select>
    <select id="loginBySno" resultType="homework.springboothomework.pojo.Student">
        select * from student where sno=#{sno}
    </select>
<!--    //删除学生-->
<!--    boolean deleteOne(Integer sno);-->
    <delete id="deleteOne" parameterType="int">
        delete from student where sno=#{sno}
    </delete>
<!--    //验证学生姓名-->
<!--    Student findOne(Integer sno);-->
    <select id="findOne" parameterType="int" resultType="homework.springboothomework.pojo.Student">
        select * from student where sno=#{sno}
    </select>
</mapper>